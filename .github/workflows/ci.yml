name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  # Needed for code scanning or later actions; kept minimal now

jobs:
  backend:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.11"]
    env:
      PYTHONUNBUFFERED: "1"
      DATABASE_URL: "sqlite+pysqlite:///:memory:"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system deps
        run: |
          sudo apt-get update -y
          sudo apt-get install -y build-essential libsqlite3-dev

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint (ruff)
        working-directory: backend
        run: |
          ruff check .. || (echo "Ruff lint failed" && exit 1)

      - name: Type Check (mypy)
        run: |
          mypy backend || (echo "Mypy failed" && exit 1)

      - name: Run seed validation (dry-run + checksum enforcement)
        working-directory: backend
        run: |
          python scripts/seed_authz.py --validate --dry-run
          # Ensure seed file not drifted vs stored checksum (if checksum file introduced later this can integrate)
          python scripts/seed_authz.py --fail-if-changed --dry-run || (echo "Seed drift detected" && exit 1)

      - name: Run tests with coverage
        run: |
          pytest -q --cov=backend --cov-report=xml

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml

      - name: Export seed JSON (dry run)
        working-directory: backend
        run: |
          python scripts/seed_authz.py --export-json seed_export.json --dry-run

      - name: Upload seed export
        uses: actions/upload-artifact@v4
        with:
          name: seed-export-${{ matrix.python-version }}
          path: backend/seed_export.json

      - name: Security audit (pip-audit)
        run: |
          pip-audit -r backend/requirements.txt || (echo "Vulnerabilities found" && exit 1)

      - name: Summary
        if: always()
        run: |
          echo "CI completed at $(date -u)"
